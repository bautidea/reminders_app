{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanb\\\\OneDrive\\\\Documentos\\\\0 - De Angelis Juan Bautista\\\\001 - Github\\\\reminders-app\\\\src\\\\components\\\\NewReminder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Here we can annotate the return value of our function component with JSX.Element\n// and with this if we dont return something, or if you return a different kind of object\n// we get a compilation error.\n// So by annotating teh return value of our function with JSX.Element the TS compiler will ensure\n// that we return a JSX element.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewReminder() {\n  _s();\n  // We are going to use a state hook.\n  const [title, setTitle] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"title\",\n      type: \"text\",\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary my-3 rounded-pill\",\n      children: \"Add Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(NewReminder, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");\n_c = NewReminder;\nexport default NewReminder;\nvar _c;\n$RefreshReg$(_c, \"NewReminder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewReminder","_s","title","setTitle","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","className","_c","$RefreshReg$"],"sources":["C:/Users/juanb/OneDrive/Documentos/0 - De Angelis Juan Bautista/001 - Github/reminders-app/src/components/NewReminder.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Here we can annotate the return value of our function component with JSX.Element\r\n// and with this if we dont return something, or if you return a different kind of object\r\n// we get a compilation error.\r\n// So by annotating teh return value of our function with JSX.Element the TS compiler will ensure\r\n// that we return a JSX element.\r\nfunction NewReminder(): JSX.Element {\r\n  // We are going to use a state hook.\r\n  const [title, setTitle] = useState('');\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"title\"></label>\r\n      <input id=\"title\" type=\"text\" className=\"form-control\" />\r\n      <button type=\"submit\" className=\"btn btn-primary my-3 rounded-pill\">\r\n        Add Reminder\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewReminder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAAA,EAAgB;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,oBACEE,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAOM,OAAO,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/BV,OAAA;MAAOW,EAAE,EAAC,OAAO;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAC;IAAc;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDV,OAAA;MAAQY,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAC,mCAAmC;MAAAR,QAAA,EAAC;IAEpE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACR,EAAA,CAbQD,WAAW;AAAAa,EAAA,GAAXb,WAAW;AAepB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}