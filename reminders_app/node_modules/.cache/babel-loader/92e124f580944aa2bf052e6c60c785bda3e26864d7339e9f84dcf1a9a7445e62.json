{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanb\\\\OneDrive\\\\Documentos\\\\0 - De Angelis Juan Bautista\\\\001 - Github\\\\reminders-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport ReminderList from './components/ReminderList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reminders = [{\n  id: 1,\n  title: 'Reminder 1'\n}];\nfunction App() {\n  _s();\n  // Im going to use state hooks to properly store our reminders in the app component.\n  // In react with TS projects this function is generic, so in angle brackets we have to specify\n  // the type of object we want to store here.\n  // We are passing an empty array to 'useState' function, because if we dont supply any arguments\n  // by default, undefined will be passed, and in that way, reminders, can only be 'Remainder[]'\n  const [reminders, setReminders] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ReminderList, {\n      items: reminders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"roWhT4ADKzhWtPWIbbhI2xoRASQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReminderList","jsxDEV","_jsxDEV","reminders","id","title","App","_s","setReminders","className","children","items","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/juanb/OneDrive/Documentos/0 - De Angelis Juan Bautista/001 - Github/reminders-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReminderList from './components/ReminderList';\nimport Reminder from './models/reminder';\n\nconst reminders: Reminder[] = [{ id: 1, title: 'Reminder 1' }];\n\nfunction App() {\n  // Im going to use state hooks to properly store our reminders in the app component.\n  // In react with TS projects this function is generic, so in angle brackets we have to specify\n  // the type of object we want to store here.\n  // We are passing an empty array to 'useState' function, because if we dont supply any arguments\n  // by default, undefined will be passed, and in that way, reminders, can only be 'Remainder[]'\n  const [reminders, setReminders] = useState<Reminder[]>([]);\n\n  return (\n    <div className=\"App\">\n      <ReminderList items={reminders} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrD,MAAMC,SAAqB,GAAG,CAAC;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAa,CAAC,CAAC;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;EACA;EACA;EACA,MAAM,CAACJ,SAAS,EAAEK,YAAY,CAAC,GAAGT,QAAQ,CAAa,EAAE,CAAC;EAE1D,oBACEG,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBR,OAAA,CAACF,YAAY;MAACW,KAAK,EAAER;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV;AAACR,EAAA,CAbQD,GAAG;AAAAU,EAAA,GAAHV,GAAG;AAeZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}