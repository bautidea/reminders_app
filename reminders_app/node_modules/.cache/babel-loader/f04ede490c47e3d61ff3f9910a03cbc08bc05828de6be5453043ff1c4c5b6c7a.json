{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanb\\\\OneDrive\\\\Documentos\\\\0 - De Angelis Juan Bautista\\\\001 - Github\\\\reminders-app\\\\src\\\\components\\\\NewReminder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Lets define an interface so its a valid prop for the 'New Reminder' component.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Here we can annotate the return value of our function component with JSX.Element\n// and with this if we dont return something, or if you return a different kind of object\n// we get a compilation error.\n// So by annotating teh return value of our function with JSX.Element the TS compiler will ensure\n// that we return a JSX element.\nfunction NewReminder({\n  onAddReminder\n}) {\n  _s();\n  // We are going to use a state hook.\n  const [title, setTitle] = useState('');\n\n  // To handle the form submission\n  const submitForm = e => {\n    // Here we are preventing the default submission of the form, so we can do everything on the client.\n    e.preventDefault();\n    console.log(title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: title,\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary my-3 rounded-pill\",\n      children: \"Add Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(NewReminder, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");\n_c = NewReminder;\nexport default NewReminder;\nvar _c;\n$RefreshReg$(_c, \"NewReminder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewReminder","onAddReminder","_s","title","setTitle","submitForm","e","preventDefault","console","log","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","target","value","type","className","_c","$RefreshReg$"],"sources":["C:/Users/juanb/OneDrive/Documentos/0 - De Angelis Juan Bautista/001 - Github/reminders-app/src/components/NewReminder.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Lets define an interface so its a valid prop for the 'New Reminder' component.\r\ninterface NewRemainderProps {\r\n  onAddReminder: (title: string) => void;\r\n}\r\n\r\n// Here we can annotate the return value of our function component with JSX.Element\r\n// and with this if we dont return something, or if you return a different kind of object\r\n// we get a compilation error.\r\n// So by annotating teh return value of our function with JSX.Element the TS compiler will ensure\r\n// that we return a JSX element.\r\nfunction NewReminder({ onAddReminder }: NewRemainderProps): JSX.Element {\r\n  // We are going to use a state hook.\r\n  const [title, setTitle] = useState('');\r\n\r\n  // To handle the form submission\r\n  const submitForm = (e: React.FormEvent) => {\r\n    // Here we are preventing the default submission of the form, so we can do everything on the client.\r\n    e.preventDefault();\r\n    console.log(title);\r\n  };\r\n  return (\r\n    <form onSubmit={submitForm}>\r\n      <label htmlFor=\"title\"></label>\r\n      <input\r\n        id={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n      />\r\n      <button type=\"submit\" className=\"btn btn-primary my-3 rounded-pill\">\r\n        Add Reminder\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewReminder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAAC;EAAEC;AAAiC,CAAC,EAAe;EAAAC,EAAA;EACtE;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMQ,UAAU,GAAIC,CAAkB,IAAK;IACzC;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACpB,CAAC;EACD,oBACEJ,OAAA;IAAMW,QAAQ,EAAEL,UAAW;IAAAM,QAAA,gBACzBZ,OAAA;MAAOa,OAAO,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/BjB,OAAA;MACEkB,EAAE,EAAEd,KAAM;MACVe,QAAQ,EAAGZ,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACa,MAAM,CAACC,KAAK,CAAE;MAC1CC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAC;IAAc;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFjB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAC,mCAAmC;MAAAX,QAAA,EAAC;IAEpE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACd,EAAA,CAxBQF,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}