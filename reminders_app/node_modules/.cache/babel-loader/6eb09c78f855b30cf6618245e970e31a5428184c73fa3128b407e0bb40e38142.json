{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanb\\\\OneDrive\\\\Documentos\\\\0 - De Angelis Juan Bautista\\\\001 - Github\\\\reminders-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ReminderList from './components/ReminderList';\nimport reminderService from './services/reminder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Im going to use state hooks to properly store our reminders in the app component.\n  // In react with TS projects this function is generic, so in angle brackets we have to specify\n  // the type of object we want to store here.\n  // We are passing an empty array to 'useState' function, because if we dont supply any arguments\n  // by default, undefined will be passed, and in that way, reminders, can only be 'Remainder[]'\n  const [reminders, setReminders] = useState([]);\n  useEffect(() => {\n    loadReminders();\n  }, []);\n  const loadReminders = async () => {\n    const reminders = await reminderService.getReminders();\n    setReminders(reminders);\n  };\n  // Defining a function for deleting reminders, and pass it as a callback to the reminders list.\n  const removeReminder = id => {\n    // In our reminders array im using the filter method to get all reminders, except the one with\n    // the passed id.\n    reminders.filter(reminder => reminder.id !== id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ReminderList, {\n      items: reminders,\n      onRemoveReminder: removeReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ywom95O85bhmIGDtbxAAvIW1S3U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ReminderList","reminderService","jsxDEV","_jsxDEV","App","_s","reminders","setReminders","loadReminders","getReminders","removeReminder","id","filter","reminder","className","children","items","onRemoveReminder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/juanb/OneDrive/Documentos/0 - De Angelis Juan Bautista/001 - Github/reminders-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReminderList from './components/ReminderList';\nimport Reminder from './models/reminder';\nimport reminderService from './services/reminder';\nimport { log } from 'console';\n\nfunction App() {\n  // Im going to use state hooks to properly store our reminders in the app component.\n  // In react with TS projects this function is generic, so in angle brackets we have to specify\n  // the type of object we want to store here.\n  // We are passing an empty array to 'useState' function, because if we dont supply any arguments\n  // by default, undefined will be passed, and in that way, reminders, can only be 'Remainder[]'\n  const [reminders, setReminders] = useState<Reminder[]>([]);\n\n  useEffect(() => {\n    loadReminders();\n  }, []);\n\n  const loadReminders = async () => {\n    const reminders = await reminderService.getReminders();\n    setReminders(reminders);\n  };\n  // Defining a function for deleting reminders, and pass it as a callback to the reminders list.\n  const removeReminder = (id: number) => {\n    // In our reminders array im using the filter method to get all reminders, except the one with\n    // the passed id.\n    reminders.filter((reminder) => reminder.id !== id);\n  };\n\n  return (\n    <div className=\"App\">\n      <ReminderList items={reminders} onRemoveReminder={removeReminder} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,OAAOC,eAAe,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAa,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMF,SAAS,GAAG,MAAML,eAAe,CAACQ,YAAY,CAAC,CAAC;IACtDF,YAAY,CAACD,SAAS,CAAC;EACzB,CAAC;EACD;EACA,MAAMI,cAAc,GAAIC,EAAU,IAAK;IACrC;IACA;IACAL,SAAS,CAACM,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACF,EAAE,KAAKA,EAAE,CAAC;EACpD,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBZ,OAAA,CAACH,YAAY;MAACgB,KAAK,EAAEV,SAAU;MAACW,gBAAgB,EAAEP;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV;AAAChB,EAAA,CA5BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}